<Application x:Class="MagicTheGatheringArenaDeckMaster.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MagicTheGatheringArenaDeckMaster"
             xmlns:converter="clr-namespace:MagicTheGatheringArena.Core.WPF.Converters;assembly=MagicTheGatheringArena.Core"
             xmlns:con="clr-namespace:MagicTheGatheringArenaDeckMaster.Converters"
             StartupUri="MainWindow.xaml" 
             Startup="Application_Startup"
             DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DarkThemeHighlight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converter:ArithmeticConverter x:Key="ArithmeticConverter" />
            <con:CardImageSourceConverter x:Key="CardImageSourceConverter" />

            <!-- Custom Styles -->
            <Style x:Key="DarkThemeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Foreground" Value="White" />
            </Style>
            <Style x:Key="DarkThemeBorderStyle" TargetType="Border">
                <Setter Property="BorderBrush" Value="White" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
            
            <!-- Custom ControlTemplates -->
            <Style x:Key="DarkThemeHighlightExpanderStyleOverride" TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                <Setter Property="ExpandDirection" Value="Right"/>
                <Setter Property="Foreground" Value="{DynamicResource Expander.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Expander.Background}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Expander.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true">
                                <Grid>
                                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                                  Content="{TemplateBinding Header}" 
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                                  Foreground="{TemplateBinding Foreground}" 
                                                  FocusVisualStyle="{DynamicResource ExpanderHeaderFocusVisual}" 
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border>
                                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                    <Grid Grid.Row="0">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Grid.LayoutTransform>
                                                                            <TransformGroup>
                                                                                <TransformGroup.Children>
                                                                                    <TransformCollection>
                                                                                        <RotateTransform Angle="90"/>
                                                                                    </TransformCollection>
                                                                                </TransformGroup.Children>
                                                                            </TransformGroup>
                                                                        </Grid.LayoutTransform>
                                                                        <ContentPresenter Grid.Row="0" SnapsToDevicePixels="True"/>
                                                                        <Border x:Name="border" Grid.Row="1" Background="{DynamicResource Expander.Circle.Fill}" Height="4" />
                                                                    </Grid>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="true">
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Expander.MouseOver.Circle.Stroke}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Expander.Pressed.Circle.Stroke}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Expander.Disabled.Circle.Stroke}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Popup x:Name="ContentPopup" AllowsTransparency="True" Placement="Left" PopupAnimation="Fade" 
                                           PlacementTarget="{Binding ElementName=HeaderSite}" StaysOpen="False"
                                           IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Path=ActualHeight,
                                                               Converter={StaticResource ArithmeticConverter}, ConverterParameter=-50}">
                                        <Border Background="#FF1F1F1F">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="contentColumn" Width="Auto" 
                                                                      MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=ActualWidth, 
                                                                                         Converter={StaticResource ArithmeticConverter}, ConverterParameter=-50}" />
                                                    <ColumnDefinition Width="5" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="0" Background="{DynamicResource Expander.Circle.Fill}" Padding="3,2">
                                                        <TextBlock Text="{TemplateBinding Header}" />
                                                    </Border>
                                                    <Border Grid.Row="1" BorderBrush="White" BorderThickness="1" Padding="5">
                                                        <ContentPresenter x:Name="ExpandSite" Focusable="false" 
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                          Margin="{TemplateBinding Padding}" 
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=ActualWidth}" />
                                                    </Border>
                                                </Grid>
                                                <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns">
                                                    <GridSplitter.Style>
                                                        <Style TargetType="GridSplitter" BasedOn="{StaticResource {x:Type GridSplitter}}">
                                                            <Setter Property="Background" Value="#FF1F1F1F"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#1FFFFFFF"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </GridSplitter.Style>
                                                </GridSplitter>
                                            </Grid>
                                        </Border>
                                    </Popup>                                    
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                    <Setter Property="MaxWidth" Value="1500" TargetName="contentColumn" />
                                    <Setter Property="MaxWidth" Value="1500" TargetName="ExpandSite" />
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource Expander.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
