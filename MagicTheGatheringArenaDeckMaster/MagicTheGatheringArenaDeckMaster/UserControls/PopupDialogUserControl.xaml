<UserControl x:Class="MagicTheGatheringArenaDeckMaster.UserControls.PopupDialogUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:MagicTheGatheringArenaDeckMaster.ViewModels"
             xmlns:id="clr-namespace:WPF.InternalDialogs;assembly=WPF.InternalDialogs"
             xmlns:customControls="clr-namespace:WPF.CustomControls;assembly=WPF.CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="100"
             d:DataContext="{d:DesignInstance {x:Type viewModels:PopupDialogViewModel}}"
             Loaded="UserControl_Loaded">
    <Grid x:Name="rootGrid">
        <id:MovableResizableInternalDialog x:Name="setFilterDialog"
                                           ResizableDefaultHeight="768" ResizableDefaultWidth="1024" 
                                           ResizableMinHeight="256" ResizableMinWidth="512" ResizableMaxHeight="768" ResizableMaxWidth="1024"
                                           TitleContent="Set Filter" Foreground="White" CloseOnEscape="False"
                                           TitleAreaBackground="#FF101010" AnswerAreaBackground="#FF2F2F2F" ContentBackground="#FF3F3F3F"
                                           Visibility="{Binding SetFilterViewModel.Visibility}"
                                           Result="{Binding SetFilterViewModel.Result, Mode=OneWayToSource}"
                                           FocusParent="{Binding ElementName=rootGrid}">
            <id:MovableResizableInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </id:MovableResizableInternalDialog.CloseButtonStyle>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Margin="0,0,0,10">
                    <TextBlock Grid.Row="2" TextWrapping="Wrap" Style="{StaticResource DarkThemeTextBlockStyle}">
                        You can drag and drop from the list on the left to the right (one or more). Or, you can select whatever items you want (one or more) from the list on the left and click "Add Set(s)". 
                        You can also select items (one or more) from the list on the right and remove them by clicking "Remove Selected Set(s)".
                    </TextBlock>
                </Grid>
                <Grid Grid.Column="0" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Search" Margin="0,0,5,0" Style="{StaticResource DarkThemeTextBlockStyle}" />
                        <customControls:WatermarkTextBox Grid.Column="1" Watermark="Search" 
                                                         Text="{Binding SetFilterViewModel.SetSearchText, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <ListBox x:Name="setsFilterSetsListBox" Grid.Row="1" Margin="0,5,0,0" SelectionMode="Extended" AllowDrop="False"
                             ItemsSource="{Binding SetFilterViewModel.AllSetNames}"
                             MouseLeftButtonDown="setsFilterSetsListBox_MouseLeftButtonDown" MouseMove="setsFilterSetsListBox_MouseMove" />
                    <TextBlock Grid.Row="2" FontSize="10" FontStyle="Italic" TextWrapping="Wrap"
                               Style="{StaticResource DarkThemeTextBlockStyle}">
                        Note: Some of the sets in Arena Historic mode are not listed in the data from Scryfall.com.
                    </TextBlock>
                </Grid>
                <Button Grid.Column="1" Grid.Row="1" Content="Add Set(s)" Margin="10,0" VerticalAlignment="Center" Padding="5"
                        Command="{Binding SetFilterViewModel.AddSetsCommand}" />
                <Grid Grid.Column="2" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" TextWrapping="Wrap" FontSize="18" FontWeight="Bold" Margin="0,0,0,5" Style="{StaticResource DarkThemeTextBlockStyle}">
                        Active Set Filter
                    </TextBlock>
                    <Button Grid.Row="1" Content="Remove Selected Set(s)" HorizontalAlignment="Right"
                            Command="{Binding SetFilterViewModel.RemoveSetsCommand}" />
                    <ListView x:Name="setsFilterListBox" Grid.Row="2" Margin="0,5,0,0" SelectionMode="Extended" AllowDrop="True"
                             ItemsSource="{Binding SetFilterViewModel.FilterSetNames}"
                             DragEnter="setsFilterSettingsListBox_DragEnter" DragLeave="setsFilterSettingsListBox_DragLeave" DragOver="setsFilterSettingsListBox_DragOver"
                             Drop="setsFilterSettingsListBox_Drop">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"
                                                Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=ActualWidth, 
                                                                Converter={StaticResource ArithmeticConverter}, ConverterParameter=/2|-20}" />
                                <GridViewColumn Header="Card Images"
                                                Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=ActualWidth, 
                                                                Converter={StaticResource ArithmeticConverter}, ConverterParameter=/2|-20}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="Red" />
                                                            <Setter Property="Text" Value="Images not downloaded" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding Exists}" Value="True" />
                                                                        <Condition Binding="{Binding AllImagesExistInSet}" Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="Green" />
                                                                    <Setter Property="Text" Value="Images downloaded" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding Exists}" Value="True" />
                                                                        <Condition Binding="{Binding AllImagesExistInSet}" Value="False" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="Orange" />
                                                                    <Setter Property="Text" Value="Partial set downloaded" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <TextBlock Grid.Row="3" TextWrapping="Wrap" FontSize="10" FontStyle="Italic" Style="{StaticResource DarkThemeTextBlockStyle}">
                        Images for sets that have not been downloaded will be downloaded when OK is clicked.
                    </TextBlock>
                </Grid>
            </Grid>
            <id:MovableResizableInternalDialog.AnswerAreaContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Content="OK" Margin="0,0,5,0" MinWidth="50"
                            Command="{Binding SetFilterViewModel.OkCommand}" />
                    <Button Grid.Column="2" Content="Cancel" MinWidth="50"
                            Command="{Binding SetFilterViewModel.CancelCommand}" />
                </Grid>
            </id:MovableResizableInternalDialog.AnswerAreaContent>
        </id:MovableResizableInternalDialog>
        <id:MovableResizableInternalDialog x:Name="cardDownloadDialog"
                                           ResizableDefaultHeight="210" ResizableDefaultWidth="400" ResizeGripVisibility="Collapsed"
                                           TitleContent="Image Retrieval" Foreground="White" CloseOnEscape="False"
                                           TitleAreaBackground="#FF101010" AnswerAreaBackground="#FF2F2F2F" ContentBackground="#FF3F3F3F"
                                           Visibility="{Binding CardDownloadViewModel.Visibility}"
                                           FocusParent="{Binding ElementName=rootGrid}">
            <id:MovableResizableInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </id:MovableResizableInternalDialog.CloseButtonStyle>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Downloading..." FontSize="18" Margin="0,0,0,10"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Set : " Margin="10,0,5,0" FontSize="14"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="1" Text="{Binding CardDownloadViewModel.ActiveSet}" FontSize="14" TextTrimming="CharacterEllipsis"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Card : " Margin="10,0,5,0" FontSize="14"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="1" Text="{Binding CardDownloadViewModel.ActiveCard}" FontSize="14" TextTrimming="CharacterEllipsis"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                </Grid>
                <ProgressBar Grid.Row="3" Height="20" Margin="0,10" 
                             Maximum="{Binding CardDownloadViewModel.SetDownloadTotal}" Value="{Binding CardDownloadViewModel.SetDownloadCount}" />
                <Grid Grid.Row="4" HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding CardDownloadViewModel.SetDownloadCount}"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="1" Text="of" Margin="5,0"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="2" Text="{Binding CardDownloadViewModel.SetDownloadTotal}"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="3" Text="cards in the set downloaded" Margin="5,0,0,0"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                </Grid>
                <Grid Grid.Row="5" HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding CardDownloadViewModel.DownloadCount}"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="1" Text="of" Margin="5,0"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="2" Text="{Binding CardDownloadViewModel.DownloadTotal}"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                    <TextBlock Grid.Column="3" Text="total cards downloaded" Margin="5,0,0,0"
                           Style="{StaticResource DarkThemeTextBlockStyle}" />
                </Grid>
            </Grid>
        </id:MovableResizableInternalDialog>
        <id:MovableResizableInternalDialog x:Name="settingsDialog"
                                           ResizableDefaultHeight="768" ResizableDefaultWidth="1024" 
                                           ResizableMinHeight="256" ResizableMinWidth="512" ResizableMaxHeight="768" ResizableMaxWidth="1024"
                                           TitleContent="Settings" Foreground="White" CloseOnEscape="False"
                                           TitleAreaBackground="#FF101010" AnswerAreaBackground="#FF2F2F2F" ContentBackground="#FF3F3F3F"
                                           Visibility="{Binding SettingsViewModel.Visibility}"
                                           Result="{Binding SettingsViewModel.Result, Mode=OneWayToSource}"
                                           FocusParent="{Binding ElementName=rootGrid}">
            <id:MovableResizableInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </id:MovableResizableInternalDialog.CloseButtonStyle>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="0,0,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" FontSize="18" Text="Sets allowed in MTG Arena Standard" Style="{StaticResource DarkThemeTextBlockStyle}" />
                        <ListBox x:Name="arenaStandardSets" Grid.Row="1" SelectionMode="Extended"
                                 ItemsSource="{Binding SettingsViewModel.ArenaStandardOnlySetNames}" />
                        <Grid Grid.Row="2" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Content="Add Set(s)" Margin="0,0,5,0" Command="{Binding SettingsViewModel.AddStandardSetCommand}" />
                            <Button Grid.Column="2" Content="Remove Selected Set(s)" Command="{Binding SettingsViewModel.RemoveStandardSetCommand}" />
                        </Grid>
                        <Border Grid.Row="3" Style="{StaticResource DarkThemeBorderStyle}" Height="1" Margin="25,10" />
                    </Grid>
                    <Grid Grid.Row="1" Margin="0,0,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" FontSize="18" Text="Sets allowed in MTG Arena Alchemy" Style="{StaticResource DarkThemeTextBlockStyle}" />
                        <ListBox x:Name="arenaAlchemySets" Grid.Row="1" SelectionMode="Extended"
                                 ItemsSource="{Binding SettingsViewModel.ArenaAlchemyOnlySetNames}" />
                        <Grid Grid.Row="2" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Content="Add Set(s)" Margin="0,0,5,0" Command="{Binding SettingsViewModel.AddAlchemySetCommand}" />
                            <Button Grid.Column="2" Content="Remove Selected Set(s)" Command="{Binding SettingsViewModel.RemoveAlchemySetCommand}" />
                        </Grid>
                        <Border Grid.Row="3" Style="{StaticResource DarkThemeBorderStyle}" Height="1" Margin="25,10" />
                    </Grid>
                    <Grid Grid.Row="2" Margin="0,0,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" FontSize="18" Text="Sets allowed in MTG Arena Historic" Style="{StaticResource DarkThemeTextBlockStyle}" />
                        <ListBox x:Name="arenaHistoricSets" Grid.Row="1" SelectionMode="Extended"
                                 ItemsSource="{Binding SettingsViewModel.ArenaHistoricOnlySetNames}" />
                        <Grid Grid.Row="2" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Content="Add Set(s)" Margin="0,0,5,0" Command="{Binding SettingsViewModel.AddHistoricSetCommand}" />
                            <Button Grid.Column="2" Content="Remove Selected Set(s)" Command="{Binding SettingsViewModel.RemoveHistoricSetCommand}" />
                        </Grid>
                        <Border Grid.Row="3" Style="{StaticResource DarkThemeBorderStyle}" Height="1" Margin="25,10" />
                    </Grid>
                    <TextBlock Grid.Row="3" TextWrapping="Wrap" Margin="0,10,0,0" Style="{StaticResource DarkThemeTextBlockStyle}"
                               Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualWidth, 
                                               Converter={StaticResource ArithmeticConverter}, ConverterParameter=-10}">
                            <Italic>This is managed by you, the user, because this is an ever changing list of sets and there is no online service the development team is aware of to tell 
                            us what sets are allowed in Magic The Gathering Arena. Please manage these list of sets yourself. See the Magic The Gathering Arena game itself for more 
                            information.</Italic>
                    </TextBlock>
                </Grid>
            </ScrollViewer>
            <id:MovableResizableInternalDialog.AnswerAreaContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Content="OK" Margin="0,0,5,0" MinWidth="50"
                            Command="{Binding SettingsViewModel.OkCommand}" />
                    <Button Grid.Column="2" Content="Cancel" MinWidth="50"
                            Command="{Binding SettingsViewModel.CancelCommand}" />
                </Grid>
            </id:MovableResizableInternalDialog.AnswerAreaContent>
        </id:MovableResizableInternalDialog>
        <id:MovableResizableInternalDialog x:Name="addSetToSettingsDialog"
                                           ResizableDefaultHeight="512" ResizableDefaultWidth="768" 
                                           ResizableMinHeight="256" ResizableMinWidth="512" ResizableMaxHeight="768" ResizableMaxWidth="1024"
                                           TitleContent="{Binding AddSetToSettingsViewModel.Title}" Foreground="White" CloseOnEscape="False"
                                           TitleAreaBackground="#FF101010" AnswerAreaBackground="#FF2F2F2F" ContentBackground="#FF3F3F3F"
                                           Visibility="{Binding AddSetToSettingsViewModel.Visibility}"
                                           Result="{Binding AddSetToSettingsViewModel.Result, Mode=OneWayToSource}"
                                           FocusParent="{Binding ElementName=rootGrid}">
            <id:MovableResizableInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </id:MovableResizableInternalDialog.CloseButtonStyle>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Margin="0,0,0,10">
                    <TextBlock Grid.Row="2" TextWrapping="Wrap" Style="{StaticResource DarkThemeTextBlockStyle}">
                        You can drag and drop from the list on the left to the right (one or more). Or, you can select whatever items you want (one or more) from the list on the left and click "Add Set(s)". 
                        You can also select items (one or more) from the list on the right and remove them by clicking "Remove Selected Set(s)".
                    </TextBlock>
                </Grid>
                <Grid Grid.Column="0" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Search" Margin="0,0,5,0" Style="{StaticResource DarkThemeTextBlockStyle}" />
                        <customControls:WatermarkTextBox Grid.Column="1" Watermark="Search" 
                                                         Text="{Binding AddSetToSettingsViewModel.SetSearchText, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <ListBox x:Name="addSetsSetsListBox" Grid.Row="1" Margin="0,5,0,0" SelectionMode="Extended" AllowDrop="False"
                             ItemsSource="{Binding AddSetToSettingsViewModel.AllSetNames}"
                             MouseLeftButtonDown="addSetsSetsListBox_MouseLeftButtonDown" MouseMove="addSetsSetsListBox_MouseMove" />
                </Grid>
                <Button Grid.Column="1" Grid.Row="1" Content="Add Set(s)" Margin="10,0" VerticalAlignment="Center" Padding="5"
                        Command="{Binding AddSetToSettingsViewModel.AddSetsCommand}" />
                <Grid Grid.Column="2" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Content="Remove Selected Set(s)" HorizontalAlignment="Right"
                            Command="{Binding AddSetToSettingsViewModel.RemoveSetsCommand}" />
                    <ListBox x:Name="addSetsSettingsListBox" Grid.Row="1" Margin="0,5,0,0" SelectionMode="Extended" AllowDrop="True"
                             ItemsSource="{Binding AddSetToSettingsViewModel.SettingSetNames}"
                             DragEnter="addSetsSettingsListBox_DragEnter" DragLeave="addSetsSettingsListBox_DragLeave" DragOver="addSetsSettingsListBox_DragOver"
                             Drop="addSetsSettingsListBox_Drop"/>
                </Grid>
            </Grid>
            <id:MovableResizableInternalDialog.AnswerAreaContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Content="OK" Margin="0,0,5,0" MinWidth="50"
                            Command="{Binding AddSetToSettingsViewModel.OkCommand}" />
                    <Button Grid.Column="2" Content="Cancel" MinWidth="50"
                            Command="{Binding AddSetToSettingsViewModel.CancelCommand}" />
                </Grid>
            </id:MovableResizableInternalDialog.AnswerAreaContent>
        </id:MovableResizableInternalDialog>
        <id:MovableResizableInternalDialog x:Name="dataDialog"
                                           TitleContent="Data" Foreground="White" CloseOnEscape="False"
                                           TitleAreaBackground="#FF101010" AnswerAreaBackground="#FF2F2F2F" ContentBackground="#FF3F3F3F"
                                           Visibility="{Binding DataViewModel.Visibility}"
                                           FocusParent="{Binding ElementName=rootGrid}">
            <id:MovableResizableInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </id:MovableResizableInternalDialog.CloseButtonStyle>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <TextBlock TextWrapping="Wrap" Style="{StaticResource DarkThemeTextBlockStyle}">
                    This software needs data from Scryfall.com in order to function properly (more than 100MB). As such, it requires 
                    an <Bold>internet connection</Bold>. 
                    <LineBreak /><LineBreak />
                    After data is <Italic>downloaded one time</Italic> there will be no more need to go online to get data but that data <Italic>will eventually get 
                    old</Italic> and become <Underline>out of date</Underline>. Please use an active internet connection every session or <Italic><Bold>connect it every 
                    so often to get new data</Bold></Italic>. An "Offline Mode" button will appear when this feature is available.
                    <LineBreak /><LineBreak />
                    Use the "Download Data" button to get up to date data from Scryfall.com.
                </TextBlock>
            </ScrollViewer>
            <id:MovableResizableInternalDialog.AnswerAreaContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Content="Offline Mode" Margin="0,0,5,0"
                            Visibility="{Binding DataViewModel.OfflineModeVisibility}"
                            Command="{Binding DataViewModel.OfflineModeCommand}" />
                    <Button Grid.Column="2" Content="Download Data"
                            Command="{Binding DataViewModel.DownloadDataCommand}" />
                </Grid>
            </id:MovableResizableInternalDialog.AnswerAreaContent>
        </id:MovableResizableInternalDialog>
        <id:ProgressInternalDialog x:Name="progressDialog" 
                                   CloseOnEscape="False" ProgressDialogBackground="#FF2F2F2F" TitleAreaBackground="#FF101010" Foreground="White"
                                   Visibility="{Binding ProgressViewModel.ProgressDialogVisbility}" 
                                   ProgressDialogMessage="{Binding ProgressViewModel.ProgressMessage}"
                                   Title="{Binding ProgressViewModel.ProgressTitle}" ResizeGripVisibility="Collapsed"
                                   ProgressValue="{Binding ProgressViewModel.ProgressValue}"
                                   FocusParent="{Binding ElementName=rootGrid}">
            <id:ProgressInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </id:ProgressInternalDialog.CloseButtonStyle>
            <id:ProgressInternalDialog.ProgressBarStyle>
                <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                    <Setter Property="IsIndeterminate" Value="{Binding ProgressViewModel.ProgressIsIndeterminate}" />
                    <Setter Property="Maximum" Value="{Binding ProgressViewModel.ProgressMax}" />
                    <Setter Property="Minimum" Value="{Binding ProgressViewModel.ProgressMin}" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </id:ProgressInternalDialog.ProgressBarStyle>
        </id:ProgressInternalDialog>
        <id:MovableResizableInternalDialog x:Name="aboutDialog"
                                           Foreground="White" TitleContent="About MTG Arena Deck Master"
                                           TitleAreaBackground="#FF101010" AnswerAreaBackground="#FF2F2F2F" ContentBackground="#FF3F3F3F"
                                           Visibility="{Binding AboutDialogViewModel.AboutBoxVisibility}"
                                           FocusParent="{Binding ElementName=rootGrid}">
            <id:MovableResizableInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Background" Value="#00000000" />
                    <Setter Property="BorderBrush" Value="#00000000" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Content">
                        <Setter.Value>
                            <Rectangle Width="16" Height="16">
                                <Rectangle.Fill>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1M8.583,8L13,12.424 12.424,13 8,8.583 3.576,13 3,12.424 7.417,8 3,3.576 3.576,3 8,7.417 12.424,3 13,3.576z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Setter.Value>
                    </Setter>
                </Style>
            </id:MovableResizableInternalDialog.CloseButtonStyle>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <TextBlock TextWrapping="Wrap" Style="{StaticResource DarkThemeTextBlockStyle}">
                    <Italic Foreground="#FFAAAAAA">
                        This application is unofficial content permitted under the Wizards of the Coast Fan Content Policy. The literal and graphical 
                        information presented in this application about Magic: The Gathering, including card images, the mana symbols and card text, 
                        is © (copyright) Wizards of the Coast, LLC, a subsidiary of Hasbro, Inc. Magic The Gathering Arena Deck Master is not produced by, 
                        endorsed by, supported by, or affiliated with Wizards of the Coast.
                    </Italic>
                    <LineBreak /><LineBreak />
                    Thanks to the folks over at Scryfall.com for all the awesome content they put together and for making an API we can query. 
                    <LineBreak /><LineBreak />
                    <Run Text="{Binding AboutDialogViewModel.Version, Mode=OneWay, StringFormat=Version {0}}" />                    
                    <LineBreak /><LineBreak />
                    Shout out to <Italic><Bold>s.baeumlisberger</Bold></Italic> for VirtualizingWrapPanel...
                    <LineBreak />
                    <Hyperlink NavigateUri="https://www.nuget.org/packages/VirtualizingWrapPanel/">https://www.nuget.org/packages/VirtualizingWrapPanel/</Hyperlink><LineBreak />
                    <Hyperlink NavigateUri="https://github.com/sbaeumlisberger/VirtualizingWrapPanel">https://github.com/sbaeumlisberger/VirtualizingWrapPanel</Hyperlink><LineBreak />
                </TextBlock>
            </ScrollViewer>
        </id:MovableResizableInternalDialog>
        <id:MessageBoxInternalDialog x:Name="mbDialog" Foreground="White"
                                     MessageBoxBackground="#FF2F2F2F" TitleAreaBackground="#FF101010" ButtonAreaBackground="#FF2F2F2F"
                                     Visibility="{Binding MessageBoxViewModel.MessageBoxVisibility}" Message="{Binding MessageBoxViewModel.MessageBoxMessage}"
                                     Title="{Binding MessageBoxViewModel.MessageBoxTitle}" MessageBoxImage="{Binding MessageBoxViewModel.MessageBoxImage}"
                                     Result="{Binding MessageBoxViewModel.MessageBoxResult, Mode=TwoWay}" IsModal="{Binding MessageBoxViewModel.MessageBoxIsModal}"
                                     MessageBoxButton="{Binding MessageBoxViewModel.MessageBoxButton}"
                                     FocusParent="{Binding ElementName=rootGrid}">
            <id:MessageBoxInternalDialog.CloseButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Background" Value="#00000000" />
                    <Setter Property="BorderBrush" Value="#00000000" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Content">
                        <Setter.Value>
                            <Rectangle Width="16" Height="16">
                                <Rectangle.Fill>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1M8.583,8L13,12.424 12.424,13 8,8.583 3.576,13 3,12.424 7.417,8 3,3.576 3.576,3 8,7.417 12.424,3 13,3.576z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Setter.Value>
                    </Setter>
                </Style>
            </id:MessageBoxInternalDialog.CloseButtonStyle>
            <id:MessageBoxInternalDialog.ButtonStyle>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="MinWidth" Value="50" />
                </Style>
            </id:MessageBoxInternalDialog.ButtonStyle>
        </id:MessageBoxInternalDialog>
    </Grid>
</UserControl>
